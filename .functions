#!/usr/bin/env bash

ANDROID_EMULATOR_NIX_FOLDER="$DOTFILES_DIR/nix/android"
ANDROID_EMULATOR_CONFIG_FILE="$HOME/.android/avd/device.avd/config.ini"

function android-emulator() {
    cd $ANDROID_EMULATOR_NIX_FOLDER
    if [ ! -f "$ANDROID_EMULATOR_CONFIG_FILE" ]; then
        nix-build "$ANDROID_EMULATOR_NIX_FOLDER/emulator.nix"
        $DOTFILES_DIR/nix/android/result/bin/run-test-emulator & pidsave=$!
        sleep 10
        kill $pidsave
        ln -sf "$DOTFILES_DIR/nix/android/emulator-config.ini" "$ANDROID_EMULATOR_CONFIG_FILE"
    fi
    nix-build "$ANDROID_EMULATOR_NIX_FOLDER/emulator.nix"
    $DOTFILES_DIR/nix/android/result/bin/run-test-emulator
}

function unity-apk-install() {
    adb connect $DEVICE_IP &&
    sleep 2 &&
    adb -s $DEVICE_IP uninstall com.gregcodes.$1 &&
    adb -s $DEVICE_IP install ~/games-dev/apks/$1.apk &&
    adb -s $DEVICE_IP shell am start -n com.gregcodes.$1/com.unity3d.player.UnityPlayerActivity
}

function miband-build() {
    TZ=Europe/Berlin wine ~/Documents/MiBand/MiBandWFTool_1.4.1/PaletteImageMode/WatchFace.exe $1
}

function miband-watch() {
    inotifywait -m -e close_write *.png $1 |
    while read -r filename event; do
        if [ ${#filename} -eq 8 ] || [ "$filename" = "$1" ]; then
            miband-build *.json
        fi
    done
}

source $HOME/.gregflix-functions 2> /dev/null
