#!/bin/bash

source $HOME/dev/dotfiles/alias/.tmdb-functions

function changeEncoding {
    if file -i "$1.srt" |grep -q "iso-8859-1"; then
        iconv -f ISO-8859-1 -t UTF-8 "$1.srt" -o "$1.srt.tmp" &&
        mv "$1.srt.tmp" "$1.srt"
    fi
}

function 2vtt {
    changeEncoding "$1"
    srt2vtt "$1.srt"
}

function encodeVideo {
    ffmpeg -y -i "$1.mkv" -c:v libx264 -c:a aac -sn "$1.mp4"
    2vtt "$1"
}

function encodeAudio {
    ffmpeg -y -i "$1.mkv" -c:v copy -c:a aac -sn "$1.mp4"
    2vtt "$1"
}

function toMp4 {
    ffmpeg -y -i "$1.mkv" -c:v copy -c:a copy -map 0:v -map 0:1 -map 0:1 -sn "$1.mp4"
    2vtt "$1"
}

function uploadSerie {
    SERIE_PATH=s3://gregflix/file.gregflix.site/series/$2/s$3/e$4/$1.mp4
    TRACK_PATH=s3://gregflix/file.gregflix.site/series/$2/s$3/e$4/$1.srt
    VTT_PATH=s3://gregflix/file.gregflix.site/series/$2/s$3/e$4/$1.vtt

    s3cmd info $TRACK_PATH >/dev/null 2>&1

    if [[ $? -eq 0 ]]; then
        echo "Track already uploaded"
    else
        s3cmd put $1.srt s3://gregflix/file.gregflix.site/series/$2/s$3/e$4/$1.srt -P --add-header='content-type':'text/srt' --mime-type='text/srt'
    fi

    s3cmd info $VTT_PATH >/dev/null 2>&1

    if [[ $? -eq 0 ]]; then
        echo "VTT already uploaded"
    else
        s3cmd put $1.vtt s3://gregflix/file.gregflix.site/series/$2/s$3/e$4/$1.vtt -P --add-header='content-type':'text/vtt' --mime-type='text/vtt'
    fi

    s3cmd info $SERIE_PATH >/dev/null 2>&1

    if [[ $? -eq 0 ]]; then
        echo "Serie already uploaded"
    else
        s3cmd put $1.mp4 s3://gregflix/file.gregflix.site/series/$2/s$3/e$4/$1.mp4 -P --add-header='content-type':'video/mp4' --mime-type='video/mp4'
    fi
}

function uploadSerieTrack {
    s3cmd put $1.vtt s3://gregflix/file.gregflix.site/series/$2/s$3/e$4/$1.vtt -P --add-header='content-type':'text/vtt' --mime-type='text/vtt'
    s3cmd put $1.srt s3://gregflix/file.gregflix.site/series/$2/s$3/e$4/$1.srt -P --add-header='content-type':'text/srt' --mime-type='text/srt'
}

function uploadMovieTrack {
    TRACK_PATH=s3://gregflix/file.gregflix.site/movies/$2/$1.srt
    VTT_PATH=s3://gregflix/file.gregflix.site/movies/$2/$1.vtt

    s3cmd put $1.srt $TRACK_PATH -P --add-header='content-type':'text/srt' --mime-type='text/srt'
    s3cmd put $1.vtt $VTT_PATH -P --add-header='content-type':'text/vtt' --mime-type='text/vtt'
}

function uploadMovie {
    MOVIE_PATH=s3://gregflix/file.gregflix.site/movies/$2/$1.mp4
    TRACK_PATH=s3://gregflix/file.gregflix.site/movies/$2/$1.srt
    VTT_PATH=s3://gregflix/file.gregflix.site/movies/$2/$1.vtt

    s3cmd info $TRACK_PATH >/dev/null 2>&1

    if [[ $? -eq 0 ]]; then
        echo "Track already uploaded"
    else
        s3cmd put $1.srt $TRACK_PATH -P --add-header='content-type':'text/srt' --mime-type='text/srt'
    fi

    s3cmd info $VTT_PATH >/dev/null 2>&1

    if [[ $? -eq 0 ]]; then
        echo "VTT already uploaded"
    else
        s3cmd put $1.vtt $VTT_PATH -P --add-header='content-type':'text/vtt' --mime-type='text/vtt'
    fi

    s3cmd info $MOVIE_PATH >/dev/null 2>&1

    if [[ $? -eq 0 ]]; then
        echo "Movie already uploaded"
    else
        s3cmd put $1.mp4 $MOVIE_PATH -P --add-header='content-type':'video/mp4' --mime-type='video/mp4'
    fi
}

function insertMovieSQL {
    MOVIE_EXISTS=$(mysql-cac3 -r -s -N -e "SELECT 1 FROM movie where slug = '$2';")

    if [ "$MOVIE_EXISTS" = "1" ]; then
        echo "Movie already in DB"
        return
    fi

    QUERY="INSERT INTO movie VALUES (null, \"$1\", \"$2\", \"$4\", \"https://gregflix.nyc3.digitaloceanspaces.com/file.gregflix.site/movies/$2/$3.mp4\", NOW());"
    QUERY="${QUERY//\'}"

    echo "Inserting query: $QUERY" 
    mysql-cac3 -e $QUERY
}

function insertSerieSQL {
    SERIE_EXISTS=$(mysql-cac3 -r -s -N -e "SELECT 1 FROM serie where slug = '$2' AND season = $4 AND episode = $5;")

    if [ "$SERIE_EXISTS" = "1" ]; then
        echo "Serie already in DB"
        return
    fi

    QUERY="INSERT INTO serie VALUES (null, \"$1\", \"$2\", \"$7\", \"https://gregflix.nyc3.digitaloceanspaces.com/file.gregflix.site/series/$2/s$4/e$5/$3.mp4\", $4, $5, \"$6\", NOW());"
    QUERY="${QUERY//\'}"

    echo "Inserting query: $QUERY" 
    mysql-cac3 -e $QUERY
}

function processVideo {
    if [ "$#" -eq 7 ] || [ "$#" -eq 4 ] || [ "$#" -eq 5 ] || [ "$#" -eq 3 ]; then
        
        if [ ! -f "$3.mp4" ]; then
            if mediainfo --Inform="Video;Codec=%CodecID%" "$3.mkv" |grep -q 'MPEG4'; then
                toMp4 "$3"
            else
                encodeVideo "$3"
            fi
        fi

        if [ ! -f "$3.vtt" ]; then 
            2vtt "$3"
        fi

        if [ "$#" -eq 7 ] || [ "$#" -eq 5 ]; then
        	EPISODE_NAME="${6:=$(getEpisodeName $1 $4 $5)}"
        	EPISODE_NAME=${EPISODE_NAME//\'}
        	EPISODE_NAME=${EPISODE_NAME//\"}
        	EPISODE_DESCRIPTION="${7:=$(getEpisodeDescription $1 $4 $5)}"
        	EPISODE_DESCRIPTION=${EPISODE_DESCRIPTION//\'}
        	EPISODE_DESCRIPTION=${EPISODE_DESCRIPTION//\"}
        	

            uploadSerie $3 $2 $4 $5
            insertSerieSQL $1 $2 $3 $4 $5 $EPISODE_NAME $EPISODE_DESCRIPTION
        else
        	MOVIE_DESCRIPTION="${4:=$(getMovieDescription $1)}"

            uploadMovie $3 $2
            insertMovieSQL $1 $2 $3 $MOVIE_DESCRIPTION
        fi

        return
    fi

    echo "inform all parameters:\n\nFor Serie:\n1-Name\n2-Slug\n3-File name\n4-Season\n5-Episode\n6-Episode name\n7-Episode description\n\nFor Movie:\n1-Name\n2-Slug\n3-File name\n4-Description"
    return 1
}

function dump-gregflix {
    mysqldump -u root -p123mudar -h $CAC3_IP gregflix > ~/cac/gregflix/gregflix-$1-$2.sql
}